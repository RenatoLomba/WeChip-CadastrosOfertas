// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeChip_CadastrosOfertas.Database.Context;

namespace WeChip_CadastrosOfertas.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("Credito")
                        .HasColumnType("REAL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76272d1d-4f8c-4479-b1ad-12ca42e9e137"),
                            Codigo = "00015",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 859, DateTimeKind.Utc).AddTicks(6619),
                            Descricao = "Mouse",
                            Preco = 20.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 859, DateTimeKind.Utc).AddTicks(7398)
                        },
                        new
                        {
                            Id = new Guid("e6f44416-e02c-4018-821b-0c9195f22600"),
                            Codigo = "00106",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1031),
                            Descricao = "Teclado",
                            Preco = 30.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1046)
                        },
                        new
                        {
                            Id = new Guid("1b96c4ce-9774-4e8b-a3eb-9aa341958737"),
                            Codigo = "00200",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1102),
                            Descricao = "Monitor 17",
                            Preco = 350.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1104)
                        },
                        new
                        {
                            Id = new Guid("07bdfafa-c0ee-48d5-b577-334267217cbb"),
                            Codigo = "00211",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1106),
                            Descricao = "Pen Drive 8GB",
                            Preco = 30.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1107)
                        },
                        new
                        {
                            Id = new Guid("9321770c-7577-496b-819a-b4b1185c2b9c"),
                            Codigo = "00314",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1122),
                            Descricao = "Pen Drive 16GB",
                            Preco = 50.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1123)
                        },
                        new
                        {
                            Id = new Guid("8e476872-6ce9-4584-9332-8e599a202432"),
                            Codigo = "00459",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1126),
                            Descricao = "AVAST",
                            Preco = 199.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1127)
                        },
                        new
                        {
                            Id = new Guid("fd73afb2-f5ca-4a15-b21c-4f38856f20e6"),
                            Codigo = "01104",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1129),
                            Descricao = "Pacote Office",
                            Preco = 499.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1130)
                        },
                        new
                        {
                            Id = new Guid("8bff60fb-5fe2-4089-957d-cae46b4e957e"),
                            Codigo = "01108",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1133),
                            Descricao = "Spotify (3 meses)",
                            Preco = 45.5,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1134)
                        },
                        new
                        {
                            Id = new Guid("e0f7d124-481e-4add-ac2a-9d9994618735"),
                            Codigo = "01107",
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1136),
                            Descricao = "Netflix (1 mês)",
                            Preco = 199.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 860, DateTimeKind.Utc).AddTicks(1137)
                        });
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.ProdutoOferta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OfertaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OfertaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ContabilizaVenda")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("FinalizaCliente")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33b5a200-0c8f-4f2b-972e-5d0e1f74fdfb"),
                            Codigo = "0001",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(6699),
                            Descricao = "Nome Disponível",
                            FinalizaCliente = false,
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(6714)
                        },
                        new
                        {
                            Id = new Guid("069e5cdb-5bf1-4fde-a678-841d29f2710b"),
                            Codigo = "0007",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8063),
                            Descricao = "Não deseja ser contatado",
                            FinalizaCliente = true,
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8071)
                        },
                        new
                        {
                            Id = new Guid("b962c6c6-f971-421e-8aeb-58d8dd91a0f7"),
                            Codigo = "0009",
                            ContabilizaVenda = true,
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8103),
                            Descricao = "Cliente aceitou oferta",
                            FinalizaCliente = true,
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8104)
                        },
                        new
                        {
                            Id = new Guid("a0cf8e99-3405-4ec3-9fbb-c436b6ffefb1"),
                            Codigo = "0015",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8116),
                            Descricao = "Caiu a Ligação",
                            FinalizaCliente = false,
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8117)
                        },
                        new
                        {
                            Id = new Guid("f1e219a5-4444-4556-93e9-c40f8004c528"),
                            Codigo = "0019",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8119),
                            Descricao = "Viajou",
                            FinalizaCliente = false,
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8120)
                        },
                        new
                        {
                            Id = new Guid("504a7af2-9b6e-46e2-b96c-cb8643da5d83"),
                            Codigo = "0021",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8123),
                            Descricao = "Falecido",
                            FinalizaCliente = true,
                            UpdatedAt = new DateTime(2021, 4, 24, 22, 20, 11, 862, DateTimeKind.Utc).AddTicks(8124)
                        });
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Status", "Status")
                        .WithMany("Clientes")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Cliente", "Cliente")
                        .WithMany("Ofertas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeChip_CadastrosOfertas.Entities.Endereco", "Endereco")
                        .WithOne("Oferta")
                        .HasForeignKey("WeChip_CadastrosOfertas.Entities.Oferta", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.ProdutoOferta", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Oferta", "Oferta")
                        .WithMany("ProdutosOferta")
                        .HasForeignKey("OfertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeChip_CadastrosOfertas.Entities.Produto", "Produto")
                        .WithMany("ProdutosOferta")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oferta");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Endereco", b =>
                {
                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.Navigation("ProdutosOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Produto", b =>
                {
                    b.Navigation("ProdutosOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Status", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
