// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeChip_CadastrosOfertas.Database.Context;

namespace WeChip_CadastrosOfertas.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210424212441_StatusUpdateMigration")]
    partial class StatusUpdateMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("Credito")
                        .HasColumnType("REAL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00e350b8-9a97-4e0d-8a66-ea334de32c48"),
                            Codigo = "00015",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 265, DateTimeKind.Utc).AddTicks(9290),
                            Descricao = "Mouse",
                            Preco = 20.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(87)
                        },
                        new
                        {
                            Id = new Guid("715a370c-c626-401a-841b-f4a62d79c238"),
                            Codigo = "00106",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3557),
                            Descricao = "Teclado",
                            Preco = 30.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3574)
                        },
                        new
                        {
                            Id = new Guid("fd295aca-7400-40d0-aec4-72c5084b4643"),
                            Codigo = "00200",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3632),
                            Descricao = "Monitor 17",
                            Preco = 350.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3634)
                        },
                        new
                        {
                            Id = new Guid("9e2ebbc9-d5b0-47bd-989c-dd34594bd893"),
                            Codigo = "00211",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3637),
                            Descricao = "Pen Drive 8GB",
                            Preco = 30.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3638)
                        },
                        new
                        {
                            Id = new Guid("aba98d77-a4fc-4750-8874-7fd9e5b7dd59"),
                            Codigo = "00314",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3640),
                            Descricao = "Pen Drive 16GB",
                            Preco = 50.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3641)
                        },
                        new
                        {
                            Id = new Guid("92404c8a-f4b1-44b4-9819-e265a847283b"),
                            Codigo = "00459",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3644),
                            Descricao = "AVAST",
                            Preco = 199.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3645)
                        },
                        new
                        {
                            Id = new Guid("db0418e7-5082-42a1-b5e2-bee91a550c21"),
                            Codigo = "01104",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3648),
                            Descricao = "Pacote Office",
                            Preco = 499.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3649)
                        },
                        new
                        {
                            Id = new Guid("3b949fc7-a15a-4eaa-96c8-12921cacb7d8"),
                            Codigo = "01108",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3652),
                            Descricao = "Spotify (3 meses)",
                            Preco = 45.5,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3653)
                        },
                        new
                        {
                            Id = new Guid("e03ae497-cf07-4be5-ab77-073947a63943"),
                            Codigo = "01107",
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3662),
                            Descricao = "Netflix (1 mês)",
                            Preco = 199.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 266, DateTimeKind.Utc).AddTicks(3663)
                        });
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.ProdutoOferta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OfertaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OfertaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ContabilizaVenda")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("FinalizaCliente")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46bfaa6d-9a27-41f8-9fdd-6f32770c41f9"),
                            Codigo = "0001",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 268, DateTimeKind.Utc).AddTicks(9293),
                            Descricao = "Nome Disponível",
                            FinalizaCliente = false,
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 268, DateTimeKind.Utc).AddTicks(9306)
                        },
                        new
                        {
                            Id = new Guid("bf9fe27a-17ad-48db-9dc9-b756ae67b4a1"),
                            Codigo = "0007",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(615),
                            Descricao = "Não deseja ser contatado",
                            FinalizaCliente = true,
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(621)
                        },
                        new
                        {
                            Id = new Guid("a1ce6ed2-3f8c-49e8-bef8-32bd8c2e4265"),
                            Codigo = "0009",
                            ContabilizaVenda = true,
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(652),
                            Descricao = "Cliente aceitou oferta",
                            FinalizaCliente = true,
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(653)
                        },
                        new
                        {
                            Id = new Guid("0039de23-4e91-4d6a-affa-4f2a52a1bd0e"),
                            Codigo = "0015",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(656),
                            Descricao = "Caiu a Ligação",
                            FinalizaCliente = false,
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(657)
                        },
                        new
                        {
                            Id = new Guid("e502a445-930b-4214-83bd-2317f110b43f"),
                            Codigo = "0019",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(659),
                            Descricao = "Viajou",
                            FinalizaCliente = false,
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(660)
                        },
                        new
                        {
                            Id = new Guid("446e61fd-be7e-4b41-af02-9af698b84541"),
                            Codigo = "0021",
                            ContabilizaVenda = false,
                            CreatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(662),
                            Descricao = "Falecido",
                            FinalizaCliente = true,
                            UpdatedAt = new DateTime(2021, 4, 24, 21, 24, 40, 269, DateTimeKind.Utc).AddTicks(663)
                        });
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Status", "Status")
                        .WithMany("Clientes")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Cliente", "Cliente")
                        .WithMany("Ofertas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeChip_CadastrosOfertas.Entities.Endereco", "Endereco")
                        .WithOne("Oferta")
                        .HasForeignKey("WeChip_CadastrosOfertas.Entities.Oferta", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.ProdutoOferta", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Oferta", "Oferta")
                        .WithMany("ProdutosOferta")
                        .HasForeignKey("OfertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeChip_CadastrosOfertas.Entities.Produto", "Produto")
                        .WithMany("ProdutosOferta")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oferta");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Endereco", b =>
                {
                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.Navigation("ProdutosOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Produto", b =>
                {
                    b.Navigation("ProdutosOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Status", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
