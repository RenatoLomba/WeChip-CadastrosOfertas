// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeChip_CadastrosOfertas.Database.Context;

namespace WeChip_CadastrosOfertas.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210424152931_OfertasMigration")]
    partial class OfertasMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ContabilizaVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("Credito")
                        .HasColumnType("REAL");

                    b.Property<bool>("FinalizaCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9ba605b-26fc-4fe6-a4fe-c20475b4fa56"),
                            Codigo = "00015",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 150, DateTimeKind.Utc).AddTicks(7244),
                            Descricao = "Mouse",
                            Preco = 20.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 150, DateTimeKind.Utc).AddTicks(8076)
                        },
                        new
                        {
                            Id = new Guid("82b2f171-41e8-42f3-9763-cd1e16da9293"),
                            Codigo = "00106",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1749),
                            Descricao = "Teclado",
                            Preco = 30.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1765)
                        },
                        new
                        {
                            Id = new Guid("fbb5ad57-91cf-4fbe-8e59-0cd7c2253ad9"),
                            Codigo = "00200",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1820),
                            Descricao = "Monitor 17",
                            Preco = 350.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1821)
                        },
                        new
                        {
                            Id = new Guid("5580afd7-b0aa-426e-9d09-140071ca369e"),
                            Codigo = "00211",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1825),
                            Descricao = "Pen Drive 8GB",
                            Preco = 30.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1826)
                        },
                        new
                        {
                            Id = new Guid("0257ba8b-8137-45ae-8852-f67c32b002a9"),
                            Codigo = "00314",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1828),
                            Descricao = "Pen Drive 16GB",
                            Preco = 50.0,
                            Tipo = "HARDWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1829)
                        },
                        new
                        {
                            Id = new Guid("f593b59f-28ed-42e5-9ea0-c450892a1bbe"),
                            Codigo = "00459",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1832),
                            Descricao = "AVAST",
                            Preco = 199.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1833)
                        },
                        new
                        {
                            Id = new Guid("c66134aa-7e00-412d-8983-70b6a409d8a2"),
                            Codigo = "01104",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1835),
                            Descricao = "Pacote Office",
                            Preco = 499.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1836)
                        },
                        new
                        {
                            Id = new Guid("90593b92-2d2f-464e-a591-b9798b07a2fb"),
                            Codigo = "01108",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1839),
                            Descricao = "Spotify (3 meses)",
                            Preco = 45.5,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1840)
                        },
                        new
                        {
                            Id = new Guid("43d156be-a43c-4ddf-b2e0-7376fbf9606d"),
                            Codigo = "01107",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1850),
                            Descricao = "Netflix (1 mês)",
                            Preco = 199.0,
                            Tipo = "SOFTWARE",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 151, DateTimeKind.Utc).AddTicks(1851)
                        });
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.ProdutoOferta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OfertaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OfertaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f56915b0-6b96-4363-a3ae-6f86664f1e8b"),
                            Codigo = "0001",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7858),
                            Descricao = "Nome Disponível",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7879)
                        },
                        new
                        {
                            Id = new Guid("fe176f66-8a6b-42ad-b3ac-30b2b545510c"),
                            Codigo = "0007",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7932),
                            Descricao = "Não deseja ser contatado",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7933)
                        },
                        new
                        {
                            Id = new Guid("4c3bb60b-c152-41ab-beb5-3c4e7b5c4388"),
                            Codigo = "0009",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7936),
                            Descricao = "Cliente aceitou oferta",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7937)
                        },
                        new
                        {
                            Id = new Guid("d7e7fed1-05d0-43e4-a3f4-a96087487e5d"),
                            Codigo = "0015",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7940),
                            Descricao = "Caiu a Ligação",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7941)
                        },
                        new
                        {
                            Id = new Guid("23a3fa06-9b9e-4384-8131-1a5143f707cb"),
                            Codigo = "0019",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7943),
                            Descricao = "Viajou",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7944)
                        },
                        new
                        {
                            Id = new Guid("caf5424c-6da5-4c7d-a27e-058e1bd36516"),
                            Codigo = "0021",
                            CreatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7946),
                            Descricao = "Falecido",
                            UpdatedAt = new DateTime(2021, 4, 24, 15, 29, 31, 153, DateTimeKind.Utc).AddTicks(7947)
                        });
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Status", "Status")
                        .WithMany("Clientes")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Cliente", "Cliente")
                        .WithMany("Ofertas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeChip_CadastrosOfertas.Entities.Endereco", "Endereco")
                        .WithOne("Oferta")
                        .HasForeignKey("WeChip_CadastrosOfertas.Entities.Oferta", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.ProdutoOferta", b =>
                {
                    b.HasOne("WeChip_CadastrosOfertas.Entities.Oferta", "Oferta")
                        .WithMany("ProdutosOferta")
                        .HasForeignKey("OfertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeChip_CadastrosOfertas.Entities.Produto", "Produto")
                        .WithMany("ProdutosOferta")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oferta");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Cliente", b =>
                {
                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Endereco", b =>
                {
                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Oferta", b =>
                {
                    b.Navigation("ProdutosOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Produto", b =>
                {
                    b.Navigation("ProdutosOferta");
                });

            modelBuilder.Entity("WeChip_CadastrosOfertas.Entities.Status", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
